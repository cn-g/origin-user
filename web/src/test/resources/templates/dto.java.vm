package ${package.Dto}import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;

;
#foreach($pkg in ${table.importPackages})
    #if("$!pkg"=="com.baomidou.mybatisplus.annotation.TableName")
    #elseif("$!pkg"=="com.baomidou.mybatisplus.annotation.TableField")
    #elseif("$!pkg"=="com.baomidou.mybatisplus.annotation.TableId")
    #else
        ${pkg}
            ;
    #end
#end
#if(${swagger2})
#end
#if(${entityLombokModel})
#end

/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
    #if(${entityLombokModel})
    @Data
        #if(${superEntityClass})
        @EqualsAndHashCode(callSuper = true)
        #else
        @EqualsAndHashCode(callSuper = false)
        #end
    @Accessors(chain = true)
    #end
    #if(${swagger2})
    @ApiModel(value = "${table.comment}Dto" , description = "$!{table.comment}")
    #end
public class ${entity}Dto implements Serializable {

    private static final long serialVersionUID = 1L;
## ----------  BEGIN 字段循环遍历  ----------
    #foreach($field in ${table.fields})

        #if(${field.keyFlag})
            #set($keyPropertyName=${field.propertyName})
        #end
        #if("$!field.comment" != "")
            #if(${swagger2})
            @ApiModelProperty(value = "${field.comment}")
            #else
            /**
             * ${field.comment}
             */
            #end
        #end
    private ${field.propertyType} ${field.propertyName};
    #end
## ----------  END 字段循环遍历  ----------

    #if(!${entityLombokModel})
        #foreach($field in ${table.fields})
            #if(${field.propertyType.equals("boolean")})
                #set($getprefix="is")
            #else
                #set($getprefix="get")
            #end

            public ${field.propertyType} ${getprefix}${field.capitalName}()

            {
                return ${field.propertyName};
            }

            #if(${entityBuilderModel})
            public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
            #else
                public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
            #end
            this.${field.propertyName} = ${field.propertyName};
            #if(${entityBuilderModel})
                return this;
            #end
        }
        #end
    ## --foreach end---
    #end
## --end of #if(!${entityLombokModel})--

    #if(${entityColumnConstant})
        #foreach($field in ${table.fields})
            public static final String ${field.name.toUpperCase()} = "${field.name}";

        #end
    #end
    #if(${activeRecord})
        @Override
        protected Serializable pkVal() {
        #if(${keyPropertyName})
            return this.${keyPropertyName};
        #else
            return null;
        #end
    }

    #end
    #if(!${entityLombokModel})
        @Override
        public String toString() {
        return "${entity}{" +
            #foreach($field in ${table.fields})
                #if($!{foreach.index}==0)
                        "${field.propertyName}=" + ${field.propertyName} +
                #else
                        ", ${field.propertyName}=" + ${field.propertyName} +
                #end
            #end
                "}";
    }
    #end
}
